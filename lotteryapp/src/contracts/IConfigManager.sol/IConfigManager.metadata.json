{
  "compiler": {
    "version": "0.8.22+commit.4fc1097e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "contractName",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getContractAddress",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint8",
            "name": "gameType",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getGameConfig",
        "outputs": [
          {
            "internalType": "struct IConfigManager.GameConfig",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "ticketPrice",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "gameDuration",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "fee",
                "type": "uint8"
              },
              {
                "internalType": "uint256",
                "name": "maxTicketsPerPlayer",
                "type": "uint256"
              },
              {
                "internalType": "bool",
                "name": "isActive",
                "type": "bool"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "param",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getSystemParam",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint8",
            "name": "gameType",
            "type": "uint8"
          },
          {
            "internalType": "bool",
            "name": "isActive",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setGameActive"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "contractName",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "newAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "updateContractAddress"
      },
      {
        "inputs": [
          {
            "internalType": "uint8",
            "name": "gameType",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "ticketPrice",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "gameDuration",
            "type": "uint256"
          },
          {
            "internalType": "uint8",
            "name": "fee",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "maxTicketsPerPlayer",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "updateGameConfig"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "param",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "updateSystemParam"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
      "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
      "forge-std/=lib/forge-std/src/",
      "halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/",
      "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
      "openzeppelin-contracts/=lib/openzeppelin-contracts/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "contracts/shared/interfaces/IConfigManager.sol": "IConfigManager"
    },
    "evmVersion": "shanghai",
    "libraries": {}
  },
  "sources": {
    "contracts/shared/interfaces/IConfigManager.sol": {
      "keccak256": "0xb9717999e774f96a1c4b5994b3ba03c80a7220afef1c06050d6a3e284d29dd08",
      "urls": [
        "bzz-raw://3819abe077c50f17b4bf11c3558a099ad06f5a6dd99487afbbc2df6faeb7a2e3",
        "dweb:/ipfs/QmdBw7ZEmLzYswzyRrZ76BzH3Afv8baepSS7Y4jqrxYiYW"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}