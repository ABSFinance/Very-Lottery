{
  "compiler": {
    "version": "0.8.22+commit.4fc1097e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "gameNumber",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "GameEnded",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "gameNumber",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "GameStarted",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "gameNumber",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "enum IBaseGame.GameState",
            "name": "state",
            "type": "uint8",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "GameStateChanged",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "oldPrice",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "newPrice",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "TicketPriceChanged",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "player",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "gameNumber",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "ticketCount",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "totalAmount",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "TicketPurchased",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "winner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "gameNumber",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "jackpot",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "WinnerSelected",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "partner",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "ticketCount",
            "type": "uint256"
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "buyTicket"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "partner",
            "type": "address"
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "buyTicket"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "canStartNewGame",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "currentGame",
        "outputs": [
          {
            "internalType": "struct IBaseGame.Game",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "gameNumber",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "startTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "endTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "jackpot",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "playerCount",
                "type": "uint256"
              },
              {
                "internalType": "enum IBaseGame.GameState",
                "name": "state",
                "type": "uint8"
              },
              {
                "internalType": "address[]",
                "name": "players",
                "type": "address[]"
              }
            ]
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "fee",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "gameDuration",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "gameNumber",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "gameHistory",
        "outputs": [
          {
            "internalType": "struct IBaseGame.Game",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "uint256",
                "name": "gameNumber",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "startTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "endTime",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "jackpot",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "playerCount",
                "type": "uint256"
              },
              {
                "internalType": "enum IBaseGame.GameState",
                "name": "state",
                "type": "uint8"
              },
              {
                "internalType": "address[]",
                "name": "players",
                "type": "address[]"
              }
            ]
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getCurrentGameInfo",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "gameNumber",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "startTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "endTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "jackpot",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "playerCount",
            "type": "uint256"
          },
          {
            "internalType": "enum IBaseGame.GameState",
            "name": "state",
            "type": "uint8"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getCurrentGamePlayers",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "",
            "type": "address[]"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getRemainingGameTime",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "isActive",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "isGameTimeExpired",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "maxTicketsPerPlayer",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "newPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "nextGameStartTime",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "player",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "playerTicketCount",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "referralInstance",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "newFee",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setFee"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "maxTickets",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setMaxTicketsPerPlayer"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newReferralInstance",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setReferralInstance"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "newTicketPrice",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setTicketPrice"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newTreasuryManager",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setTreasuryManager"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "ticketPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "toggleGame"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "toogleStatus",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "treasuryManager",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
      "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
      "forge-std/=lib/forge-std/src/",
      "halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/",
      "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
      "openzeppelin-contracts/=lib/openzeppelin-contracts/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "contracts/shared/interfaces/IBaseGame.sol": "IBaseGame"
    },
    "evmVersion": "shanghai",
    "libraries": {}
  },
  "sources": {
    "contracts/shared/interfaces/IBaseGame.sol": {
      "keccak256": "0x1b36aa84845e88a470ef53543fae80d0eef1e29388f70d979953045c03d42a50",
      "urls": [
        "bzz-raw://a45c6d38e0706d1f0ae59e7a8af7ca4d5a2260a8e1df4a6edbad696dc4cd5911",
        "dweb:/ipfs/QmV5k49U65aFQCordtazDkHDzfvVwTz1SqJKQT3Sx9KtbN"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}