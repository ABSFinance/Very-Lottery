{
  "compiler": {
    "version": "0.8.22+commit.4fc1097e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ContractAlreadyRegistered"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "InvalidContractAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "InvalidMigrationNumber"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "NotAuthorized"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "OwnableInvalidOwner"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "OwnableUnauthorizedAccount"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "migrationNumber",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "contractAddress",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "MigrationCompleted",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "contractAddress",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "migrationNumber",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "MigrationContractRegistered",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "migrationNumber",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getMigrationContract",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getMigrationStats",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "lastCompleted",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "totalMigrations",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "hasActiveMigration",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isMigrationContract",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "contractAddress",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isMigrationContractAddress",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "lastCompletedMigration",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "migrationContracts",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "renounceOwnership"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "completed",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setCompleted"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferOwnership"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "upgrade"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "getMigrationContract(uint256)": {
          "params": {
            "migrationNumber": "The migration number to look up"
          },
          "returns": {
            "_0": "The address of the migration contract"
          }
        },
        "getMigrationStats()": {
          "returns": {
            "hasActiveMigration": "Whether there is an active migration",
            "lastCompleted": "The last completed migration number",
            "totalMigrations": "The total number of migrations"
          }
        },
        "isMigrationContractAddress(address)": {
          "params": {
            "contractAddress": "The address to check"
          },
          "returns": {
            "_0": "True if the address is a registered migration contract"
          }
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
        },
        "setCompleted(uint256)": {
          "params": {
            "completed": "The migration number to mark as completed"
          }
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        },
        "upgrade(address)": {
          "params": {
            "newAddress": "The address of the new migration contract"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "constructor": {
          "notice": "Constructor initializes the migration contract"
        },
        "getMigrationContract(uint256)": {
          "notice": "Get migration contract by number"
        },
        "getMigrationStats()": {
          "notice": "Get migration statistics"
        },
        "isMigrationContract(address)": {
          "notice": "Mapping of contract addresses to migration status"
        },
        "isMigrationContractAddress(address)": {
          "notice": "Check if address is a migration contract"
        },
        "lastCompletedMigration()": {
          "notice": "Last completed migration number"
        },
        "migrationContracts(uint256)": {
          "notice": "Mapping of migration numbers to contract addresses"
        },
        "setCompleted(uint256)": {
          "notice": "Set the completed migration number"
        },
        "upgrade(address)": {
          "notice": "Upgrade to a new migration contract"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
      "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
      "forge-std/=lib/forge-std/src/",
      "halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/",
      "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
      "openzeppelin-contracts/=lib/openzeppelin-contracts/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "contracts/deployment/Migrations.sol": "Migrations"
    },
    "evmVersion": "shanghai",
    "libraries": {}
  },
  "sources": {
    "contracts/deployment/Migrations.sol": {
      "keccak256": "0x37b296ef35da2fc0f4f50c02071c089ed58c8b5c06349c20a2ffd7cf34336713",
      "urls": [
        "bzz-raw://6ea4507e609bd0df687a7b1919b18db1979d4f7c5975dc897e07f96a86cbceee",
        "dweb:/ipfs/QmV5X93uWRdLg8ae1qLaPVSFEmstyu1u241wrL2jHyajUg"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
      "urls": [
        "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
        "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
      "urls": [
        "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
        "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}