{"abi":[{"type":"function","name":"addAuthorizedContract","inputs":[{"name":"contractAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createTreasury","inputs":[{"name":"treasuryName","type":"string","internalType":"string"},{"name":"initialBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"depositFunds","inputs":[{"name":"treasuryName","type":"string","internalType":"string"},{"name":"user","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"getBalance","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"withdrawFunds","inputs":[{"name":"treasuryName","type":"string","internalType":"string"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addAuthorizedContract(address)":"98eaa4a7","createTreasury(string,uint256)":"c36b32de","depositFunds(string,address,uint256)":"08638fd1","getBalance()":"12065fe0","owner()":"8da5cb5b","withdrawFunds(string,address,uint256)":"f077022a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"addAuthorizedContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"treasuryName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"}],\"name\":\"createTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"treasuryName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"treasuryName\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"depositFunds(string,address,uint256)\":{\"params\":{\"amount\":\"The amount to deposit\",\"treasuryName\":\"The treasury name\",\"user\":\"The user address\"}},\"getBalance()\":{\"returns\":{\"_0\":\"The treasury balance\"}},\"withdrawFunds(string,address,uint256)\":{\"params\":{\"amount\":\"The amount to withdraw\",\"to\":\"The address to withdraw to\",\"treasuryName\":\"The treasury name\"}}},\"title\":\"ITreasuryManager\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"depositFunds(string,address,uint256)\":{\"notice\":\"Deposit funds to specific treasury\"},\"getBalance()\":{\"notice\":\"Get treasury balance\"},\"withdrawFunds(string,address,uint256)\":{\"notice\":\"Withdraw funds from treasury\"}},\"notice\":\"Interface for Treasury Manager contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/shared/interfaces/ITreasuryManager.sol\":\"ITreasuryManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/shared/interfaces/ITreasuryManager.sol\":{\"keccak256\":\"0x47141f0107d03257ee00ef2153936c138f105e39190a98564e58f4a6b596f76c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d91efe955872cb09e40ea6be79dbe560d29f0d4c92f41798f765dfc5881a67ec\",\"dweb:/ipfs/QmWeqPSRdk3yY2CvMBMUjbv7pwK7RzSTB3rFV65QfE5TbM\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.22+commit.4fc1097e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"contractAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addAuthorizedContract"},{"inputs":[{"internalType":"string","name":"treasuryName","type":"string"},{"internalType":"uint256","name":"initialBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createTreasury"},{"inputs":[{"internalType":"string","name":"treasuryName","type":"string"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"payable","type":"function","name":"depositFunds"},{"inputs":[],"stateMutability":"view","type":"function","name":"getBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"treasuryName","type":"string"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawFunds"}],"devdoc":{"kind":"dev","methods":{"depositFunds(string,address,uint256)":{"params":{"amount":"The amount to deposit","treasuryName":"The treasury name","user":"The user address"}},"getBalance()":{"returns":{"_0":"The treasury balance"}},"withdrawFunds(string,address,uint256)":{"params":{"amount":"The amount to withdraw","to":"The address to withdraw to","treasuryName":"The treasury name"}}},"version":1},"userdoc":{"kind":"user","methods":{"depositFunds(string,address,uint256)":{"notice":"Deposit funds to specific treasury"},"getBalance()":{"notice":"Get treasury balance"},"withdrawFunds(string,address,uint256)":{"notice":"Withdraw funds from treasury"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/shared/interfaces/ITreasuryManager.sol":"ITreasuryManager"},"evmVersion":"shanghai","libraries":{}},"sources":{"contracts/shared/interfaces/ITreasuryManager.sol":{"keccak256":"0x47141f0107d03257ee00ef2153936c138f105e39190a98564e58f4a6b596f76c","urls":["bzz-raw://d91efe955872cb09e40ea6be79dbe560d29f0d4c92f41798f765dfc5881a67ec","dweb:/ipfs/QmWeqPSRdk3yY2CvMBMUjbv7pwK7RzSTB3rFV65QfE5TbM"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"id":37}