{
  "compiler": {
    "version": "0.8.22+commit.4fc1097e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "InvalidInitialization"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "InvalidMaxRequests"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "InvalidTimeWindow"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "NotInitializing"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "OwnableInvalidOwner"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "OwnableUnauthorizedAccount"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "RateLimitExceeded"
      },
      {
        "inputs": [
          {
            "internalType": "uint64",
            "name": "version",
            "type": "uint64",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Initialized",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "maxRequests",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "timeWindow",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "RateLimitCreated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "RateLimitExceededEvent",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "oldMax",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "newMax",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "RateLimitUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bool",
            "name": "enabled",
            "type": "bool",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "RateLimitingToggled",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "checkRateLimit",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "defaultMaxRequests",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "defaultTimeWindow",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "disableFunctionRateLimit"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "disableUserFunctionRateLimit"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "disableUserRateLimit"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "functionRateLimits",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "maxRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeWindow",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "currentRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "windowStart",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "isActive",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getFunctionRateLimitInfo",
        "outputs": [
          {
            "internalType": "bool",
            "name": "isActive",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "currentRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeWindow",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getUserFunctionRateLimitInfo",
        "outputs": [
          {
            "internalType": "bool",
            "name": "isActive",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "currentRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeWindow",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getUserRateLimitInfo",
        "outputs": [
          {
            "internalType": "bool",
            "name": "isActive",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "currentRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeWindow",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "initialize"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "rateLimitingEnabled",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "renounceOwnership"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "maxRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeWindow",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setFunctionRateLimit"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "maxRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeWindow",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setUserFunctionRateLimit"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "maxRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeWindow",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setUserRateLimit"
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "toggleRateLimiting"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferOwnership"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "newMaxRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "newTimeWindow",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "updateDefaultSettings"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "userFunctionRateLimits",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "maxRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeWindow",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "currentRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "windowStart",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "isActive",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "userRateLimits",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "maxRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeWindow",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "currentRequests",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "windowStart",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "isActive",
            "type": "bool"
          }
        ]
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "checkRateLimit(address,string)": {
          "params": {
            "functionName": "The function name",
            "user": "The user address"
          },
          "returns": {
            "_0": "bool True if the request is allowed, false otherwise"
          }
        },
        "constructor": {
          "custom:oz-upgrades-unsafe-allow": "constructor"
        },
        "disableFunctionRateLimit(string)": {
          "params": {
            "functionName": "The function name"
          }
        },
        "disableUserFunctionRateLimit(address,string)": {
          "params": {
            "functionName": "The function name",
            "user": "The user address"
          }
        },
        "disableUserRateLimit(address)": {
          "params": {
            "user": "The user address"
          }
        },
        "getFunctionRateLimitInfo(string)": {
          "params": {
            "functionName": "The function name"
          },
          "returns": {
            "currentRequests": "Current number of requests in the window",
            "isActive": "Whether the rate limit is active",
            "maxRequests": "Maximum requests allowed",
            "timeWindow": "Time window in seconds"
          }
        },
        "getUserFunctionRateLimitInfo(address,string)": {
          "params": {
            "functionName": "The function name",
            "user": "The user address"
          },
          "returns": {
            "currentRequests": "Current number of requests in the window",
            "isActive": "Whether the rate limit is active",
            "maxRequests": "Maximum requests allowed",
            "timeWindow": "Time window in seconds"
          }
        },
        "getUserRateLimitInfo(address)": {
          "params": {
            "user": "The user address"
          },
          "returns": {
            "currentRequests": "Current number of requests in the window",
            "isActive": "Whether the rate limit is active",
            "maxRequests": "Maximum requests allowed",
            "timeWindow": "Time window in seconds"
          }
        },
        "initialize(address)": {
          "params": {
            "owner": "The owner of the contract"
          }
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
        },
        "setFunctionRateLimit(string,uint256,uint256)": {
          "params": {
            "functionName": "The function name",
            "maxRequests": "Maximum requests allowed",
            "timeWindow": "Time window in seconds"
          }
        },
        "setUserFunctionRateLimit(address,string,uint256,uint256)": {
          "params": {
            "functionName": "The function name",
            "maxRequests": "Maximum requests allowed",
            "timeWindow": "Time window in seconds",
            "user": "The user address"
          }
        },
        "setUserRateLimit(address,uint256,uint256)": {
          "params": {
            "maxRequests": "Maximum requests allowed",
            "timeWindow": "Time window in seconds",
            "user": "The user address"
          }
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        },
        "updateDefaultSettings(uint256,uint256)": {
          "params": {
            "newMaxRequests": "New default maximum requests",
            "newTimeWindow": "New default time window in seconds"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "checkRateLimit(address,string)": {
          "notice": "Check and update rate limit"
        },
        "defaultMaxRequests()": {
          "notice": "Default maximum requests"
        },
        "defaultTimeWindow()": {
          "notice": "Default time window in seconds"
        },
        "disableFunctionRateLimit(string)": {
          "notice": "Disable function-specific rate limit"
        },
        "disableUserFunctionRateLimit(address,string)": {
          "notice": "Disable user-function specific rate limit"
        },
        "disableUserRateLimit(address)": {
          "notice": "Disable user-specific rate limit"
        },
        "functionRateLimits(string)": {
          "notice": "Function-specific rate limits"
        },
        "getFunctionRateLimitInfo(string)": {
          "notice": "Get function rate limit information"
        },
        "getUserFunctionRateLimitInfo(address,string)": {
          "notice": "Get user-function specific rate limit information"
        },
        "getUserRateLimitInfo(address)": {
          "notice": "Get user rate limit information"
        },
        "initialize(address)": {
          "notice": "Initialize the rate limiter contract"
        },
        "rateLimitingEnabled()": {
          "notice": "Whether rate limiting is enabled globally"
        },
        "setFunctionRateLimit(string,uint256,uint256)": {
          "notice": "Set function-specific rate limit"
        },
        "setUserFunctionRateLimit(address,string,uint256,uint256)": {
          "notice": "Set user-function specific rate limit"
        },
        "setUserRateLimit(address,uint256,uint256)": {
          "notice": "Set user-specific rate limit"
        },
        "toggleRateLimiting()": {
          "notice": "Toggle rate limiting on/off"
        },
        "updateDefaultSettings(uint256,uint256)": {
          "notice": "Update default settings"
        },
        "userFunctionRateLimits(address,string)": {
          "notice": "User-function specific rate limits"
        },
        "userRateLimits(address)": {
          "notice": "User-specific rate limits"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
      "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
      "forge-std/=lib/forge-std/src/",
      "halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/",
      "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
      "openzeppelin-contracts/=lib/openzeppelin-contracts/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "contracts/shared/utils/RateLimiter.sol": "RateLimiter"
    },
    "evmVersion": "shanghai",
    "libraries": {}
  },
  "sources": {
    "contracts/shared/utils/RateLimiter.sol": {
      "keccak256": "0x0e681a9985c80a08d9f5ee01a658816d4469f2159b7e0e40491be2f589089dfb",
      "urls": [
        "bzz-raw://0194adff73f4ffdf7763804c9d093a2e3caece06261d791a7dea5f97de7b690e",
        "dweb:/ipfs/QmTRSbUtNGdd5ARintasKdSwN5PtzeLApaLc7yV32fbgRj"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
      "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
      "urls": [
        "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
        "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
      "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
      "urls": [
        "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
        "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
      "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
      "urls": [
        "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
        "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}