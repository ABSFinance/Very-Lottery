{
  "compiler": {
    "version": "0.8.22+commit.4fc1097e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "targetAddress",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "checkAddressCircuit",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "circuitName",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "checkCircuit",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "checkFunctionCircuit",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "targetAddress",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeout",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createAddressCircuit"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "circuitName",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeout",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createCircuit"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeout",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createFunctionCircuit"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "circuitName",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getCircuitInfo",
        "outputs": [
          {
            "internalType": "enum ICircuitBreaker.CircuitState",
            "name": "state",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "failureCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "lastFailureTime",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "threshold",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeout",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "isActive",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "targetAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "recordAddressFailure"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "targetAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "recordAddressSuccess"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "circuitName",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "recordFailure"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "recordFunctionFailure"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "functionName",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "recordFunctionSuccess"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "circuitName",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "recordSuccess"
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "toggleCircuitBreaker"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
      "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
      "forge-std/=lib/forge-std/src/",
      "halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/",
      "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
      "openzeppelin-contracts/=lib/openzeppelin-contracts/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "contracts/shared/interfaces/ICircuitBreaker.sol": "ICircuitBreaker"
    },
    "evmVersion": "shanghai",
    "libraries": {}
  },
  "sources": {
    "contracts/shared/interfaces/ICircuitBreaker.sol": {
      "keccak256": "0xf0a3f7426e7d55d767adc729a83815fc344aafee06ffb7c0c85093cefad4daf0",
      "urls": [
        "bzz-raw://78d62082135a85e164cbca98ed06aa3afceabd4fcff736c9b9a7e2d7ad073057",
        "dweb:/ipfs/Qme7PstecChApjKU9AmPhuvsXMo3d79SfAyaQhYUEpffdH"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}