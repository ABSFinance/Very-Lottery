{
  "compiler": {
    "version": "0.8.22+commit.4fc1097e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "AddressIsBlacklisted"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "AddressNotBlacklisted"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "CannotBlacklistZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "InteractionTooFrequent"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "InvalidInitialization"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "InvalidRateLimitParameters"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "NotInitializing"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "OwnableInvalidOwner"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "OwnableUnauthorizedAccount"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TooManyInteractionsPerHour"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "target",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "AddressBlacklisted",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "target",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "AddressWhitelisted",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint64",
            "name": "version",
            "type": "uint64",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Initialized",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "oldMinInterval",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "newMinInterval",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "oldMaxInteractions",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "newMaxInteractions",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "RateLimitUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "string",
            "name": "reason",
            "type": "string",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "SuspiciousActivityDetected",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "target",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "blacklistAddress"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "blacklistedAddresses",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "canInteract",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "reason",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "detectSuspiciousActivity"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getUserStats",
        "outputs": [
          {
            "internalType": "bool",
            "name": "userIsBlacklisted",
            "type": "bool"
          },
          {
            "internalType": "uint256",
            "name": "lastInteraction",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "userInteractionCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minInterval",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "maxInteractions",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "initialize"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "interactionCount",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "target",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isBlacklisted",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "lastInteractionTime",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "maxInteractionsPerHour",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "minInteractionInterval",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "recordInteraction",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "renounceOwnership"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferOwnership"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "newMinInterval",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "newMaxInteractions",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "updateRateLimits"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "target",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "whitelistAddress"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "blacklistAddress(address)": {
          "params": {
            "target": "The address to blacklist"
          }
        },
        "canInteract(address)": {
          "params": {
            "user": "The user address"
          },
          "returns": {
            "_0": "True if the user can interact"
          }
        },
        "constructor": {
          "custom:oz-upgrades-unsafe-allow": "constructor"
        },
        "detectSuspiciousActivity(address,string)": {
          "params": {
            "reason": "The reason for suspicion",
            "user": "The user address"
          }
        },
        "getUserStats(address)": {
          "params": {
            "user": "The user address"
          },
          "returns": {
            "lastInteraction": "Last interaction timestamp",
            "maxInteractions": "Maximum interactions setting",
            "minInterval": "Minimum interval setting",
            "userInteractionCount": "Current interaction count",
            "userIsBlacklisted": "Whether the user is blacklisted"
          }
        },
        "initialize(address)": {
          "params": {
            "owner": "The owner of the contract"
          }
        },
        "isBlacklisted(address)": {
          "params": {
            "target": "The address to check"
          },
          "returns": {
            "_0": "True if the address is blacklisted"
          }
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "recordInteraction(address)": {
          "params": {
            "user": "The user address"
          },
          "returns": {
            "_0": "True if the interaction is allowed"
          }
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        },
        "updateRateLimits(uint256,uint256)": {
          "params": {
            "newMaxInteractions": "New maximum interactions per hour",
            "newMinInterval": "New minimum interval in seconds"
          }
        },
        "whitelistAddress(address)": {
          "params": {
            "target": "The address to whitelist"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "blacklistAddress(address)": {
          "notice": "Add an address to the blacklist"
        },
        "blacklistedAddresses(address)": {
          "notice": "Mapping of blacklisted addresses"
        },
        "canInteract(address)": {
          "notice": "Check if a user can interact"
        },
        "detectSuspiciousActivity(address,string)": {
          "notice": "Detect suspicious activity"
        },
        "getUserStats(address)": {
          "notice": "Get user statistics"
        },
        "initialize(address)": {
          "notice": "Initialize the security utils contract"
        },
        "interactionCount(address)": {
          "notice": "Mapping of interaction counts"
        },
        "isBlacklisted(address)": {
          "notice": "Check if an address is blacklisted"
        },
        "lastInteractionTime(address)": {
          "notice": "Mapping of last interaction times"
        },
        "maxInteractionsPerHour()": {
          "notice": "Maximum interactions per hour"
        },
        "minInteractionInterval()": {
          "notice": "Minimum interval between interactions in seconds"
        },
        "recordInteraction(address)": {
          "notice": "Record interaction and check rate limits"
        },
        "updateRateLimits(uint256,uint256)": {
          "notice": "Update rate limit settings"
        },
        "whitelistAddress(address)": {
          "notice": "Remove an address from the blacklist"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
      "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
      "forge-std/=lib/forge-std/src/",
      "halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/",
      "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
      "openzeppelin-contracts/=lib/openzeppelin-contracts/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "contracts/shared/utils/SecurityUtils.sol": "SecurityUtils"
    },
    "evmVersion": "shanghai",
    "libraries": {}
  },
  "sources": {
    "contracts/shared/utils/SecurityUtils.sol": {
      "keccak256": "0xa6c926044c7daf0d148a3b14b558380ee71f2077feb20614c59ca089c3747ca0",
      "urls": [
        "bzz-raw://a5e1a41ea83d707cf616a826d672acf897c52e1e113cb8a2181134b76c2cf9f9",
        "dweb:/ipfs/QmSCrNPquXme2fViG15LTBRnFW2xvrUzUo2gLmiVp7hy1K"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
      "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
      "urls": [
        "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
        "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
      "keccak256": "0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05",
      "urls": [
        "bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08",
        "dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
      "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
      "urls": [
        "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
        "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}