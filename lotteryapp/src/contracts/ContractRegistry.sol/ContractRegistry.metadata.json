{
  "compiler": {
    "version": "0.8.22+commit.4fc1097e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ArraysLengthMismatch"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ContractAlreadyRegistered"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ContractNotRegistered"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EmptyAddressArray"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EmptyNameArray"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "InvalidContractAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "InvalidContractName"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "OwnableInvalidOwner"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "OwnableUnauthorizedAccount"
      },
      {
        "inputs": [
          {
            "internalType": "string[]",
            "name": "names",
            "type": "string[]",
            "indexed": true
          },
          {
            "internalType": "address[]",
            "name": "addresses",
            "type": "address[]",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "BatchContractsRegistered",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "contractAddress",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "ContractRegistered",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "contractAddress",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "ContractRemoved",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "oldAddress",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "newAddress",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "ContractUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "ANALYTICS_ENGINE",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "CONFIG_MANAGER",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "CRYPTOLOTTO_REFERRAL",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "EMERGENCY_MANAGER",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "EVENT_LOGGER",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "FUNDS_DISTRIBUTOR",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "GAME_FACTORY",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "MIGRATIONS",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "MONITORING_SYSTEM",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "STATS_AGGREGATOR",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "SYSTEM_MANAGER",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "TREASURY_MANAGER",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "contractNames",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "contracts",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getAllContractNames",
        "outputs": [
          {
            "internalType": "string[]",
            "name": "",
            "type": "string[]"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getContract",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getContractCount",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "treasuryManagerCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "fundsDistributorCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "referralCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "statsAggregatorCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "analyticsEngineCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "monitoringSystemCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "emergencyManagerCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "configManagerCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "systemManagerCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "eventLoggerCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "migrationsCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "gameFactoryCount",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "contractAddress",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getContractName",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string[]",
            "name": "names",
            "type": "string[]"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getContracts",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "",
            "type": "address[]"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isRegistered",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string[]",
            "name": "names",
            "type": "string[]"
          },
          {
            "internalType": "address[]",
            "name": "addresses",
            "type": "address[]"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "registerBatchContracts"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "contractAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "registerContract"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "removeContract"
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "renounceOwnership"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "transferOwnership"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "newAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "updateContract"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "constructor": {
          "params": {
            "owner": "Owner of the contract"
          }
        },
        "getAllContractNames()": {
          "returns": {
            "_0": "Array of contract names"
          }
        },
        "getContract(string)": {
          "params": {
            "name": "Contract name"
          },
          "returns": {
            "_0": "Contract address"
          }
        },
        "getContractCount()": {
          "returns": {
            "analyticsEngineCount": "Analytics engine contracts",
            "configManagerCount": "Config manager contracts",
            "emergencyManagerCount": "Emergency manager contracts",
            "eventLoggerCount": "Event logger contracts",
            "fundsDistributorCount": "Funds distributor contracts",
            "gameFactoryCount": "Game factory contracts",
            "migrationsCount": "Migrations contracts",
            "monitoringSystemCount": "Monitoring system contracts",
            "referralCount": "Referral contracts",
            "statsAggregatorCount": "Stats aggregator contracts",
            "systemManagerCount": "System manager contracts",
            "treasuryManagerCount": "Treasury manager contracts"
          }
        },
        "getContractName(address)": {
          "params": {
            "contractAddress": "Contract address"
          },
          "returns": {
            "_0": "Contract name"
          }
        },
        "getContracts(string[])": {
          "params": {
            "names": "Array of contract names"
          },
          "returns": {
            "_0": "Array of contract addresses"
          }
        },
        "isRegistered(string)": {
          "params": {
            "name": "Contract name"
          },
          "returns": {
            "_0": "Whether contract is registered"
          }
        },
        "owner()": {
          "details": "Returns the address of the current owner."
        },
        "registerBatchContracts(string[],address[])": {
          "params": {
            "addresses": "Array of contract addresses",
            "names": "Array of contract names"
          }
        },
        "registerContract(string,address)": {
          "params": {
            "contractAddress": "Contract address",
            "name": "Contract name"
          }
        },
        "removeContract(string)": {
          "params": {
            "name": "Contract name"
          }
        },
        "renounceOwnership()": {
          "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
        },
        "transferOwnership(address)": {
          "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
        },
        "updateContract(string,address)": {
          "params": {
            "name": "Contract name",
            "newAddress": "New contract address"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "ANALYTICS_ENGINE()": {
          "notice": "Analytics engine contract identifier"
        },
        "CONFIG_MANAGER()": {
          "notice": "Config manager contract identifier"
        },
        "CRYPTOLOTTO_REFERRAL()": {
          "notice": "Cryptolotto referral contract identifier"
        },
        "EMERGENCY_MANAGER()": {
          "notice": "Emergency manager contract identifier"
        },
        "EVENT_LOGGER()": {
          "notice": "Event logger contract identifier"
        },
        "FUNDS_DISTRIBUTOR()": {
          "notice": "Funds distributor contract identifier"
        },
        "GAME_FACTORY()": {
          "notice": "Game factory contract identifier"
        },
        "MIGRATIONS()": {
          "notice": "Migrations contract identifier"
        },
        "MONITORING_SYSTEM()": {
          "notice": "Monitoring system contract identifier"
        },
        "STATS_AGGREGATOR()": {
          "notice": "Stats aggregator contract identifier"
        },
        "SYSTEM_MANAGER()": {
          "notice": "System manager contract identifier"
        },
        "TREASURY_MANAGER()": {
          "notice": "Treasury manager contract identifier"
        },
        "constructor": {
          "notice": "Constructor for the contract registry"
        },
        "contractNames(uint256)": {
          "notice": "Array of registered contract names"
        },
        "contracts(string)": {
          "notice": "Mapping of contract names to addresses"
        },
        "getAllContractNames()": {
          "notice": "Get all registered contract names"
        },
        "getContract(string)": {
          "notice": "Get contract address by name"
        },
        "getContractCount()": {
          "notice": "Get contract count by type"
        },
        "getContractName(address)": {
          "notice": "Get contract name by address"
        },
        "getContracts(string[])": {
          "notice": "Get multiple contract addresses"
        },
        "isRegistered(string)": {
          "notice": "Check if a contract is registered"
        },
        "registerBatchContracts(string[],address[])": {
          "notice": "Register multiple contracts in batch"
        },
        "registerContract(string,address)": {
          "notice": "Register a single contract"
        },
        "removeContract(string)": {
          "notice": "Remove a contract from registry"
        },
        "updateContract(string,address)": {
          "notice": "Update an existing contract address"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
      "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
      "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
      "forge-std/=lib/forge-std/src/",
      "halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/",
      "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
      "openzeppelin-contracts/=lib/openzeppelin-contracts/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "compilationTarget": {
      "contracts/shared/utils/ContractRegistry.sol": "ContractRegistry"
    },
    "evmVersion": "shanghai",
    "libraries": {}
  },
  "sources": {
    "contracts/shared/utils/ContractRegistry.sol": {
      "keccak256": "0x2679c9a642ec49f4fe5b99b39742e5ad8269c25faecd59108390b6d57c04747c",
      "urls": [
        "bzz-raw://9f3e30115f43c1d84aff8cab6687c65354aa8019c546f82a6e41dda030f727c5",
        "dweb:/ipfs/QmQELtKrCywNhwKPaD2rpgM1f35f1iKzM6FomYNGmH9E6H"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
      "urls": [
        "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
        "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
      ],
      "license": "MIT"
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
      "urls": [
        "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
        "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}